services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: calories_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  calories-producer:
    build:
      context: ./Calories
      dockerfile: Dockerfile
    container_name: calories-producer
    ports:
      - "8083:8083"
    environment:
      DB_URL: jdbc:mysql://mysql:3306/calories_db
      DB_USER: app_user
      DB_PASSWORD: app_password
      RABBIT_USER: admin
      RABBIT_PASSWORD: admin
      SPRING_RABBITMQ_HOST: rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    restart: unless-stopped

  calories-consumer:
    build:
      context: ./CalorieConsumer
      dockerfile: Dockerfile
    container_name: calories-consumer
    ports:
      - "8081:8081"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
    depends_on:
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy
      calories-producer:
        condition: service_healthy
    restart: unless-stopped

  calories-subscription-client:
    build:
      context: ./subscription-graphql-client
      dockerfile: Dockerfile
    container_name: calories-subscription-client
    ports:
      - "8082:8082"
    environment:
      GRAPHQL_URL: ws://calories-producer:8083/v1/graphql
    depends_on:
      zipkin:
        condition: service_healthy
      calories-producer:
        condition: service_healthy
    restart: unless-stopped

volumes:
  mysql_data: